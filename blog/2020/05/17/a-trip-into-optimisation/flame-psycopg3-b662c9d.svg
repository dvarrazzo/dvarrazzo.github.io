<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1157.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1157.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (asyncio/__init__.py) (66 samples, 1.25%)</title><rect x="0.6237%" y="148" width="1.2474%" height="15" fill="rgb(227,0,7)"/><text x="0.8737%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (66 samples, 1.25%)</title><rect x="0.6237%" y="164" width="1.2474%" height="15" fill="rgb(217,0,24)"/><text x="0.8737%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (66 samples, 1.25%)</title><rect x="0.6237%" y="180" width="1.2474%" height="15" fill="rgb(221,193,54)"/><text x="0.8737%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (65 samples, 1.23%)</title><rect x="0.6426%" y="196" width="1.2285%" height="15" fill="rgb(248,212,6)"/><text x="0.8926%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (65 samples, 1.23%)</title><rect x="0.6426%" y="212" width="1.2285%" height="15" fill="rgb(208,68,35)"/><text x="0.8926%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (65 samples, 1.23%)</title><rect x="0.6426%" y="228" width="1.2285%" height="15" fill="rgb(232,128,0)"/><text x="0.8926%" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (67 samples, 1.27%)</title><rect x="4.1769%" y="836" width="1.2663%" height="15" fill="rgb(207,160,47)"/><text x="4.4269%" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="852" width="1.2663%" height="15" fill="rgb(228,23,34)"/><text x="4.4269%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="868" width="1.2663%" height="15" fill="rgb(218,30,26)"/><text x="4.4269%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="884" width="1.2663%" height="15" fill="rgb(220,122,19)"/><text x="4.4269%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="900" width="1.2663%" height="15" fill="rgb(250,228,42)"/><text x="4.4269%" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="916" width="1.2663%" height="15" fill="rgb(240,193,28)"/><text x="4.4269%" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="932" width="1.2663%" height="15" fill="rgb(216,20,37)"/><text x="4.4269%" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="948" width="1.2663%" height="15" fill="rgb(206,188,39)"/><text x="4.4269%" y="958.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (67 samples, 1.27%)</title><rect x="4.1769%" y="964" width="1.2663%" height="15" fill="rgb(217,207,13)"/><text x="4.4269%" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="980" width="1.2663%" height="15" fill="rgb(231,73,38)"/><text x="4.4269%" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="996" width="1.2663%" height="15" fill="rgb(225,20,46)"/><text x="4.4269%" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1012" width="1.2663%" height="15" fill="rgb(210,31,41)"/><text x="4.4269%" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1028" width="1.2663%" height="15" fill="rgb(221,200,47)"/><text x="4.4269%" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1044" width="1.2663%" height="15" fill="rgb(226,26,5)"/><text x="4.4269%" y="1054.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (67 samples, 1.27%)</title><rect x="4.1769%" y="1060" width="1.2663%" height="15" fill="rgb(249,33,26)"/><text x="4.4269%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1076" width="1.2663%" height="15" fill="rgb(235,183,28)"/><text x="4.4269%" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1092" width="1.2663%" height="15" fill="rgb(221,5,38)"/><text x="4.4269%" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1108" width="1.2663%" height="15" fill="rgb(247,18,42)"/><text x="4.4269%" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (67 samples, 1.27%)</title><rect x="4.1769%" y="1124" width="1.2663%" height="15" fill="rgb(241,131,45)"/><text x="4.4269%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (74 samples, 1.40%)</title><rect x="4.1202%" y="756" width="1.3986%" height="15" fill="rgb(249,31,29)"/><text x="4.3702%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (74 samples, 1.40%)</title><rect x="4.1202%" y="772" width="1.3986%" height="15" fill="rgb(225,111,53)"/><text x="4.3702%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (74 samples, 1.40%)</title><rect x="4.1202%" y="788" width="1.3986%" height="15" fill="rgb(238,160,17)"/><text x="4.3702%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (74 samples, 1.40%)</title><rect x="4.1202%" y="804" width="1.3986%" height="15" fill="rgb(214,148,48)"/><text x="4.3702%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (74 samples, 1.40%)</title><rect x="4.1202%" y="820" width="1.3986%" height="15" fill="rgb(232,36,49)"/><text x="4.3702%" y="830.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (77 samples, 1.46%)</title><rect x="4.1202%" y="740" width="1.4553%" height="15" fill="rgb(209,103,24)"/><text x="4.3702%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (80 samples, 1.51%)</title><rect x="4.1202%" y="708" width="1.5120%" height="15" fill="rgb(229,88,8)"/><text x="4.3702%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (80 samples, 1.51%)</title><rect x="4.1202%" y="724" width="1.5120%" height="15" fill="rgb(213,181,19)"/><text x="4.3702%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (139 samples, 2.63%)</title><rect x="3.0807%" y="452" width="2.6271%" height="15" fill="rgb(254,191,54)"/><text x="3.3307%" y="462.50">_c..</text></g><g><title>&lt;module&gt; (numpy/lib/type_check.py) (132 samples, 2.49%)</title><rect x="3.2130%" y="468" width="2.4948%" height="15" fill="rgb(241,83,37)"/><text x="3.4630%" y="478.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="484" width="2.4948%" height="15" fill="rgb(233,36,39)"/><text x="3.4630%" y="494.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="500" width="2.4948%" height="15" fill="rgb(226,3,54)"/><text x="3.4630%" y="510.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="516" width="2.4948%" height="15" fill="rgb(245,192,40)"/><text x="3.4630%" y="526.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="532" width="2.4948%" height="15" fill="rgb(238,167,29)"/><text x="3.4630%" y="542.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="548" width="2.4948%" height="15" fill="rgb(232,182,51)"/><text x="3.4630%" y="558.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="564" width="2.4948%" height="15" fill="rgb(231,60,39)"/><text x="3.4630%" y="574.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="580" width="2.4948%" height="15" fill="rgb(208,69,12)"/><text x="3.4630%" y="590.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (132 samples, 2.49%)</title><rect x="3.2130%" y="596" width="2.4948%" height="15" fill="rgb(235,93,37)"/><text x="3.4630%" y="606.50">_c..</text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (132 samples, 2.49%)</title><rect x="3.2130%" y="612" width="2.4948%" height="15" fill="rgb(213,116,39)"/><text x="3.4630%" y="622.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (85 samples, 1.61%)</title><rect x="4.1013%" y="628" width="1.6065%" height="15" fill="rgb(222,207,29)"/><text x="4.3513%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (85 samples, 1.61%)</title><rect x="4.1013%" y="644" width="1.6065%" height="15" fill="rgb(206,96,30)"/><text x="4.3513%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (85 samples, 1.61%)</title><rect x="4.1013%" y="660" width="1.6065%" height="15" fill="rgb(218,138,4)"/><text x="4.3513%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (85 samples, 1.61%)</title><rect x="4.1013%" y="676" width="1.6065%" height="15" fill="rgb(250,191,14)"/><text x="4.3513%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (84 samples, 1.59%)</title><rect x="4.1202%" y="692" width="1.5876%" height="15" fill="rgb(239,60,40)"/><text x="4.3702%" y="702.50"></text></g><g><title>&lt;module&gt; (numpy/add_newdocs.py) (149 samples, 2.82%)</title><rect x="2.9484%" y="276" width="2.8161%" height="15" fill="rgb(206,27,48)"/><text x="3.1984%" y="286.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (149 samples, 2.82%)</title><rect x="2.9484%" y="292" width="2.8161%" height="15" fill="rgb(225,35,8)"/><text x="3.1984%" y="302.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (149 samples, 2.82%)</title><rect x="2.9484%" y="308" width="2.8161%" height="15" fill="rgb(250,213,24)"/><text x="3.1984%" y="318.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (144 samples, 2.72%)</title><rect x="3.0429%" y="324" width="2.7216%" height="15" fill="rgb(247,123,22)"/><text x="3.2929%" y="334.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (144 samples, 2.72%)</title><rect x="3.0429%" y="340" width="2.7216%" height="15" fill="rgb(231,138,38)"/><text x="3.2929%" y="350.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (144 samples, 2.72%)</title><rect x="3.0429%" y="356" width="2.7216%" height="15" fill="rgb(231,145,46)"/><text x="3.2929%" y="366.50">_c..</text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (144 samples, 2.72%)</title><rect x="3.0429%" y="372" width="2.7216%" height="15" fill="rgb(251,118,11)"/><text x="3.2929%" y="382.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (144 samples, 2.72%)</title><rect x="3.0429%" y="388" width="2.7216%" height="15" fill="rgb(217,147,25)"/><text x="3.2929%" y="398.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (143 samples, 2.70%)</title><rect x="3.0618%" y="404" width="2.7027%" height="15" fill="rgb(247,81,37)"/><text x="3.3118%" y="414.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (142 samples, 2.68%)</title><rect x="3.0807%" y="420" width="2.6838%" height="15" fill="rgb(209,12,38)"/><text x="3.3307%" y="430.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (142 samples, 2.68%)</title><rect x="3.0807%" y="436" width="2.6838%" height="15" fill="rgb(227,1,9)"/><text x="3.3307%" y="446.50">ex..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (171 samples, 3.23%)</title><rect x="2.8917%" y="164" width="3.2319%" height="15" fill="rgb(248,47,43)"/><text x="3.1417%" y="174.50">_ha..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (171 samples, 3.23%)</title><rect x="2.8917%" y="180" width="3.2319%" height="15" fill="rgb(221,10,30)"/><text x="3.1417%" y="190.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (171 samples, 3.23%)</title><rect x="2.8917%" y="196" width="3.2319%" height="15" fill="rgb(210,229,1)"/><text x="3.1417%" y="206.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (170 samples, 3.21%)</title><rect x="2.9106%" y="212" width="3.2130%" height="15" fill="rgb(222,148,37)"/><text x="3.1606%" y="222.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (169 samples, 3.19%)</title><rect x="2.9295%" y="228" width="3.1941%" height="15" fill="rgb(234,67,33)"/><text x="3.1795%" y="238.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (169 samples, 3.19%)</title><rect x="2.9295%" y="244" width="3.1941%" height="15" fill="rgb(247,98,35)"/><text x="3.1795%" y="254.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (168 samples, 3.18%)</title><rect x="2.9484%" y="260" width="3.1752%" height="15" fill="rgb(247,138,52)"/><text x="3.1984%" y="270.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (178 samples, 3.36%)</title><rect x="2.8539%" y="148" width="3.3642%" height="15" fill="rgb(213,79,30)"/><text x="3.1039%" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (53 samples, 1.00%)</title><rect x="6.2181%" y="164" width="1.0017%" height="15" fill="rgb(246,177,23)"/><text x="6.4681%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (53 samples, 1.00%)</title><rect x="6.2181%" y="180" width="1.0017%" height="15" fill="rgb(230,62,27)"/><text x="6.4681%" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (53 samples, 1.00%)</title><rect x="6.2181%" y="196" width="1.0017%" height="15" fill="rgb(216,154,8)"/><text x="6.4681%" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (53 samples, 1.00%)</title><rect x="6.2181%" y="212" width="1.0017%" height="15" fill="rgb(244,35,45)"/><text x="6.4681%" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (53 samples, 1.00%)</title><rect x="6.2181%" y="228" width="1.0017%" height="15" fill="rgb(251,115,12)"/><text x="6.4681%" y="238.50"></text></g><g><title>&lt;module&gt; (psycopg3/__init__.py) (76 samples, 1.44%)</title><rect x="6.2181%" y="148" width="1.4364%" height="15" fill="rgb(240,54,50)"/><text x="6.4681%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (405 samples, 7.65%)</title><rect x="0.0378%" y="68" width="7.6545%" height="15" fill="rgb(233,84,52)"/><text x="0.2878%" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (405 samples, 7.65%)</title><rect x="0.0378%" y="84" width="7.6545%" height="15" fill="rgb(207,117,47)"/><text x="0.2878%" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (405 samples, 7.65%)</title><rect x="0.0378%" y="100" width="7.6545%" height="15" fill="rgb(249,43,39)"/><text x="0.2878%" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (405 samples, 7.65%)</title><rect x="0.0378%" y="116" width="7.6545%" height="15" fill="rgb(209,38,44)"/><text x="0.2878%" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (405 samples, 7.65%)</title><rect x="0.0378%" y="132" width="7.6545%" height="15" fill="rgb(236,212,23)"/><text x="0.2878%" y="142.50">_call_with..</text></g><g><title>Handle__run (uvloop/cbhandles.pyx) (88 samples, 1.66%)</title><rect x="8.0325%" y="244" width="1.6632%" height="15" fill="rgb(242,79,21)"/><text x="8.2825%" y="254.50"></text></g><g><title>wakeup (psycopg3/waiting.py) (76 samples, 1.44%)</title><rect x="8.2593%" y="260" width="1.4364%" height="15" fill="rgb(211,96,35)"/><text x="8.5093%" y="270.50"></text></g><g><title>set (asyncio/locks.py) (60 samples, 1.13%)</title><rect x="8.5617%" y="276" width="1.1340%" height="15" fill="rgb(253,215,40)"/><text x="8.8117%" y="286.50"></text></g><g><title>loop___on_uvpoll_event (poll.pyx) (96 samples, 1.81%)</title><rect x="7.9002%" y="228" width="1.8144%" height="15" fill="rgb(211,81,21)"/><text x="8.1502%" y="238.50">l..</text></g><g><title>uv__epoll_wait (linux-syscalls.c) (152 samples, 2.87%)</title><rect x="10.3194%" y="228" width="2.8728%" height="15" fill="rgb(208,190,38)"/><text x="10.5694%" y="238.50">uv..</text></g><g><title>syscall (libc-2.27.so) (152 samples, 2.87%)</title><rect x="10.3194%" y="244" width="2.8728%" height="15" fill="rgb(235,213,38)"/><text x="10.5694%" y="254.50">sy..</text></g><g><title>uv__io_poll (linux-core.c) (290 samples, 5.48%)</title><rect x="7.7868%" y="212" width="5.4810%" height="15" fill="rgb(237,122,38)"/><text x="8.0368%" y="222.50">uv__io_..</text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (81 samples, 1.53%)</title><rect x="21.8484%" y="596" width="1.5309%" height="15" fill="rgb(244,218,35)"/><text x="22.0984%" y="606.50"></text></g><g><title>lookup_loader (psycopg3/transform.pyx) (80 samples, 1.51%)</title><rect x="21.8673%" y="612" width="1.5120%" height="15" fill="rgb(240,68,47)"/><text x="22.1173%" y="622.50"></text></g><g><title>lookup_loader (psycopg3/transform.pyx) (80 samples, 1.51%)</title><rect x="21.8673%" y="628" width="1.5120%" height="15" fill="rgb(210,16,53)"/><text x="22.1173%" y="638.50"></text></g><g><title>__Pyx_PyObject_FastCall_fallback (psycopg3/_psycopg3.pyx) (145 samples, 2.74%)</title><rect x="21.5838%" y="580" width="2.7405%" height="15" fill="rgb(235,124,12)"/><text x="21.8338%" y="590.50">__..</text></g><g><title>__Pyx_PyObject_FastCall_fallback (psycopg3/_psycopg3.pyx) (178 samples, 3.36%)</title><rect x="21.0168%" y="516" width="3.3642%" height="15" fill="rgb(224,169,11)"/><text x="21.2668%" y="526.50">__P..</text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (174 samples, 3.29%)</title><rect x="21.0924%" y="532" width="3.2886%" height="15" fill="rgb(250,166,2)"/><text x="21.3424%" y="542.50">__P..</text></g><g><title>get_load_function (psycopg3/transform.pyx) (170 samples, 3.21%)</title><rect x="21.1680%" y="548" width="3.2130%" height="15" fill="rgb(242,216,29)"/><text x="21.4180%" y="558.50">get..</text></g><g><title>get_load_function (psycopg3/transform.pyx) (169 samples, 3.19%)</title><rect x="21.1869%" y="564" width="3.1941%" height="15" fill="rgb(230,116,27)"/><text x="21.4369%" y="574.50">get..</text></g><g><title>Transformer__set_loader (psycopg3/transform.pyx) (250 samples, 4.73%)</title><rect x="20.5254%" y="500" width="4.7250%" height="15" fill="rgb(228,99,48)"/><text x="20.7754%" y="510.50">Transf..</text></g><g><title>__Pyx_PyObject_FastCall_fallback (psycopg3/_psycopg3.pyx) (264 samples, 4.99%)</title><rect x="20.3364%" y="436" width="4.9896%" height="15" fill="rgb(253,11,6)"/><text x="20.5864%" y="446.50">__Pyx_..</text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (262 samples, 4.95%)</title><rect x="20.3742%" y="452" width="4.9518%" height="15" fill="rgb(247,143,39)"/><text x="20.6242%" y="462.50">__Pyx_..</text></g><g><title>set_row_types (psycopg3/transform.pyx) (261 samples, 4.93%)</title><rect x="20.3931%" y="468" width="4.9329%" height="15" fill="rgb(236,97,10)"/><text x="20.6431%" y="478.50">set_ro..</text></g><g><title>set_row_types (psycopg3/transform.pyx) (260 samples, 4.91%)</title><rect x="20.4120%" y="484" width="4.9140%" height="15" fill="rgb(233,208,19)"/><text x="20.6620%" y="494.50">set_ro..</text></g><g><title>_execute_results (psycopg3/cursor.py) (358 samples, 6.77%)</title><rect x="18.5787%" y="356" width="6.7662%" height="15" fill="rgb(216,164,2)"/><text x="18.8287%" y="366.50">_execute_..</text></g><g><title>pgresult (psycopg3/cursor.py) (275 samples, 5.20%)</title><rect x="20.1474%" y="372" width="5.1975%" height="15" fill="rgb(220,129,5)"/><text x="20.3974%" y="382.50">pgresu..</text></g><g><title>__pyx_setprop_8psycopg3_9_psycopg3_11Transformer_pgresult (psycopg3/transform.pyx) (270 samples, 5.10%)</title><rect x="20.2419%" y="388" width="5.1030%" height="15" fill="rgb(242,17,10)"/><text x="20.4919%" y="398.50">__pyx_..</text></g><g><title>__set__ (psycopg3/transform.pyx) (270 samples, 5.10%)</title><rect x="20.2419%" y="404" width="5.1030%" height="15" fill="rgb(242,107,0)"/><text x="20.4919%" y="414.50">__set_..</text></g><g><title>__set__ (psycopg3/transform.pyx) (270 samples, 5.10%)</title><rect x="20.2419%" y="420" width="5.1030%" height="15" fill="rgb(251,28,31)"/><text x="20.4919%" y="430.50">__set_..</text></g><g><title>pqsecure_raw_write (fe-secure.c) (84 samples, 1.59%)</title><rect x="25.9497%" y="468" width="1.5876%" height="15" fill="rgb(233,223,10)"/><text x="26.1997%" y="478.50"></text></g><g><title>send (libc-2.27.so) (82 samples, 1.55%)</title><rect x="25.9875%" y="484" width="1.5498%" height="15" fill="rgb(215,21,27)"/><text x="26.2375%" y="494.50"></text></g><g><title>PQsendQueryParams (fe-exec.c) (88 samples, 1.66%)</title><rect x="25.8930%" y="420" width="1.6632%" height="15" fill="rgb(232,23,21)"/><text x="26.1430%" y="430.50"></text></g><g><title>PQsendQueryGuts (fe-exec.c) (86 samples, 1.63%)</title><rect x="25.9308%" y="436" width="1.6254%" height="15" fill="rgb(244,5,23)"/><text x="26.1808%" y="446.50"></text></g><g><title>pqSendSome (fe-misc.c) (85 samples, 1.61%)</title><rect x="25.9497%" y="452" width="1.6065%" height="15" fill="rgb(226,81,46)"/><text x="26.1997%" y="462.50"></text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (99 samples, 1.87%)</title><rect x="25.8741%" y="372" width="1.8711%" height="15" fill="rgb(247,70,30)"/><text x="26.1241%" y="382.50">_..</text></g><g><title>send_query_params (psycopg3/pq/pq_cython.pyx) (99 samples, 1.87%)</title><rect x="25.8741%" y="388" width="1.8711%" height="15" fill="rgb(212,68,19)"/><text x="26.1241%" y="398.50">s..</text></g><g><title>send_query_params (psycopg3/pq/pq_cython.pyx) (98 samples, 1.85%)</title><rect x="25.8930%" y="404" width="1.8522%" height="15" fill="rgb(240,187,13)"/><text x="26.1430%" y="414.50">s..</text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (56 samples, 1.06%)</title><rect x="28.4256%" y="404" width="1.0584%" height="15" fill="rgb(223,113,26)"/><text x="28.6756%" y="414.50"></text></g><g><title>dump_sequence (psycopg3/transform.pyx) (56 samples, 1.06%)</title><rect x="28.4256%" y="420" width="1.0584%" height="15" fill="rgb(206,192,2)"/><text x="28.6756%" y="430.50"></text></g><g><title>dump_sequence (psycopg3/transform.pyx) (56 samples, 1.06%)</title><rect x="28.4256%" y="436" width="1.0584%" height="15" fill="rgb(241,108,4)"/><text x="28.6756%" y="446.50"></text></g><g><title>_execute_send (psycopg3/cursor.py) (263 samples, 4.97%)</title><rect x="25.3449%" y="356" width="4.9707%" height="15" fill="rgb(247,173,49)"/><text x="25.5949%" y="366.50">_execu..</text></g><g><title>convert (psycopg3/utils/queries.py) (119 samples, 2.25%)</title><rect x="28.0665%" y="372" width="2.2491%" height="15" fill="rgb(224,114,35)"/><text x="28.3165%" y="382.50">c..</text></g><g><title>dump (psycopg3/utils/queries.py) (108 samples, 2.04%)</title><rect x="28.2744%" y="388" width="2.0412%" height="15" fill="rgb(245,159,27)"/><text x="28.5244%" y="398.50">d..</text></g><g><title>__pyx_tp_new_8psycopg3_9_psycopg3_Transformer (psycopg3/transform.pyx) (65 samples, 1.23%)</title><rect x="30.9015%" y="372" width="1.2285%" height="15" fill="rgb(245,172,44)"/><text x="31.1515%" y="382.50"></text></g><g><title>__cinit__ (psycopg3/transform.pyx) (65 samples, 1.23%)</title><rect x="30.9015%" y="388" width="1.2285%" height="15" fill="rgb(236,23,11)"/><text x="31.1515%" y="398.50"></text></g><g><title>Transformer___cinit__ (psycopg3/transform.pyx) (65 samples, 1.23%)</title><rect x="30.9015%" y="404" width="1.2285%" height="15" fill="rgb(205,117,38)"/><text x="31.1515%" y="414.50"></text></g><g><title>__Pyx_PyObject_FastCall_fallback (psycopg3/_psycopg3.pyx) (56 samples, 1.06%)</title><rect x="31.0716%" y="420" width="1.0584%" height="15" fill="rgb(237,72,25)"/><text x="31.3216%" y="430.50"></text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (56 samples, 1.06%)</title><rect x="31.0716%" y="436" width="1.0584%" height="15" fill="rgb(244,70,9)"/><text x="31.3216%" y="446.50"></text></g><g><title>_setup_context (psycopg3/transform.pyx) (55 samples, 1.04%)</title><rect x="31.0905%" y="452" width="1.0395%" height="15" fill="rgb(217,125,39)"/><text x="31.3405%" y="462.50"></text></g><g><title>_setup_context (psycopg3/transform.pyx) (55 samples, 1.04%)</title><rect x="31.0905%" y="468" width="1.0395%" height="15" fill="rgb(235,36,10)"/><text x="31.3405%" y="478.50"></text></g><g><title>_start_query (psycopg3/cursor.py) (150 samples, 2.84%)</title><rect x="30.3156%" y="356" width="2.8350%" height="15" fill="rgb(251,123,47)"/><text x="30.5656%" y="366.50">_s..</text></g><g><title>coro (asyncio/coroutines.py) (114 samples, 2.15%)</title><rect x="33.1506%" y="356" width="2.1546%" height="15" fill="rgb(221,13,13)"/><text x="33.4006%" y="366.50">c..</text></g><g><title>PQconsumeInput (fe-exec.c) (231 samples, 4.37%)</title><rect x="38.9151%" y="436" width="4.3659%" height="15" fill="rgb(238,131,9)"/><text x="39.1651%" y="446.50">PQcon..</text></g><g><title>pqReadData (fe-misc.c) (230 samples, 4.35%)</title><rect x="38.9340%" y="452" width="4.3470%" height="15" fill="rgb(211,50,8)"/><text x="39.1840%" y="462.50">pqRea..</text></g><g><title>pqsecure_raw_read (fe-secure.c) (224 samples, 4.23%)</title><rect x="39.0474%" y="468" width="4.2336%" height="15" fill="rgb(245,182,24)"/><text x="39.2974%" y="478.50">pqsec..</text></g><g><title>recv (socket2.h) (221 samples, 4.18%)</title><rect x="39.1041%" y="484" width="4.1769%" height="15" fill="rgb(242,14,37)"/><text x="39.3541%" y="494.50">recv ..</text></g><g><title>recv (libc-2.27.so) (221 samples, 4.18%)</title><rect x="39.1041%" y="500" width="4.1769%" height="15" fill="rgb(246,228,12)"/><text x="39.3541%" y="510.50">recv ..</text></g><g><title>pqGetInt (fe-misc.c) (93 samples, 1.76%)</title><rect x="45.6057%" y="484" width="1.7577%" height="15" fill="rgb(213,55,15)"/><text x="45.8557%" y="494.50"></text></g><g><title>0x7fbdf3d070dd (libc-2.27.so) (196 samples, 3.70%)</title><rect x="54.4888%" y="532" width="3.7044%" height="15" fill="rgb(209,9,3)"/><text x="54.7388%" y="542.50">0x7f..</text></g><g><title>pqRowProcessor (fe-exec.c) (575 samples, 10.87%)</title><rect x="47.3634%" y="484" width="10.8675%" height="15" fill="rgb(230,59,30)"/><text x="47.6134%" y="494.50">pqRowProcessor (..</text></g><g><title>pqResultAlloc (fe-exec.c) (346 samples, 6.54%)</title><rect x="51.6916%" y="500" width="6.5394%" height="15" fill="rgb(209,121,21)"/><text x="51.9416%" y="510.50">pqResultA..</text></g><g><title>__libc_malloc (libc-2.27.so) (239 samples, 4.52%)</title><rect x="53.7139%" y="516" width="4.5171%" height="15" fill="rgb(220,109,13)"/><text x="53.9639%" y="526.50">__lib..</text></g><g><title>getAnotherTuple (fe-protocol3.c) (827 samples, 15.63%)</title><rect x="43.8858%" y="468" width="15.6303%" height="15" fill="rgb(232,18,1)"/><text x="44.1358%" y="478.50">getAnotherTuple (fe-prot..</text></g><g><title>pqSkipnchar (fe-misc.c) (68 samples, 1.29%)</title><rect x="58.2310%" y="484" width="1.2852%" height="15" fill="rgb(215,41,42)"/><text x="58.4810%" y="494.50"></text></g><g><title>PQisBusy (fe-exec.c) (889 samples, 16.80%)</title><rect x="43.3377%" y="436" width="16.8021%" height="15" fill="rgb(224,123,36)"/><text x="43.5877%" y="446.50">PQisBusy (fe-exec.c)</text></g><g><title>pqParseInput3 (fe-protocol3.c) (889 samples, 16.80%)</title><rect x="43.3377%" y="452" width="16.8021%" height="15" fill="rgb(240,125,3)"/><text x="43.5877%" y="462.50">pqParseInput3 (fe-protocol..</text></g><g><title>__Pyx_Coroutine_Send (psycopg3/_psycopg3.pyx) (1,140 samples, 21.55%)</title><rect x="38.6883%" y="388" width="21.5460%" height="15" fill="rgb(205,98,50)"/><text x="38.9383%" y="398.50">__Pyx_Coroutine_Send (psycopg3/_ps..</text></g><g><title>__Pyx_Coroutine_SendEx (psycopg3/_psycopg3.pyx) (1,136 samples, 21.47%)</title><rect x="38.7639%" y="404" width="21.4704%" height="15" fill="rgb(205,185,37)"/><text x="39.0139%" y="414.50">__Pyx_Coroutine_SendEx (psycopg3/_..</text></g><g><title>__pyx_gb_8psycopg3_9_psycopg3_5generator1 (psycopg3/generators.pyx) (1,135 samples, 21.45%)</title><rect x="38.7828%" y="420" width="21.4515%" height="15" fill="rgb(238,207,15)"/><text x="39.0328%" y="430.50">__pyx_gb_8psycopg3_9_psycopg3_5gen..</text></g><g><title>pqRowProcessor (fe-exec.c) (103 samples, 1.95%)</title><rect x="61.5952%" y="468" width="1.9467%" height="15" fill="rgb(213,199,42)"/><text x="61.8452%" y="478.50">p..</text></g><g><title>pqResultAlloc (fe-exec.c) (56 samples, 1.06%)</title><rect x="62.4835%" y="484" width="1.0584%" height="15" fill="rgb(235,201,11)"/><text x="62.7335%" y="494.50"></text></g><g><title>getAnotherTuple (fe-protocol3.c) (140 samples, 2.65%)</title><rect x="61.1794%" y="452" width="2.6460%" height="15" fill="rgb(207,46,11)"/><text x="61.4294%" y="462.50">ge..</text></g><g><title>PQisBusy (fe-exec.c) (161 samples, 3.04%)</title><rect x="61.0282%" y="420" width="3.0429%" height="15" fill="rgb(241,35,35)"/><text x="61.2782%" y="430.50">PQi..</text></g><g><title>pqParseInput3 (fe-protocol3.c) (161 samples, 3.04%)</title><rect x="61.0282%" y="436" width="3.0429%" height="15" fill="rgb(243,32,47)"/><text x="61.2782%" y="446.50">pqP..</text></g><g><title>__Pyx_Coroutine_SendEx (psycopg3/_psycopg3.pyx) (204 samples, 3.86%)</title><rect x="60.2344%" y="388" width="3.8556%" height="15" fill="rgb(247,202,23)"/><text x="60.4844%" y="398.50">__Py..</text></g><g><title>__pyx_gb_8psycopg3_9_psycopg3_5generator1 (psycopg3/generators.pyx) (203 samples, 3.84%)</title><rect x="60.2533%" y="404" width="3.8367%" height="15" fill="rgb(219,102,11)"/><text x="60.5033%" y="414.50">__py..</text></g><g><title>UVPoll__init (poll.pyx) (66 samples, 1.25%)</title><rect x="66.4525%" y="452" width="1.2474%" height="15" fill="rgb(243,110,44)"/><text x="66.7025%" y="462.50"></text></g><g><title>uv_poll_init (poll.c) (59 samples, 1.12%)</title><rect x="66.5848%" y="468" width="1.1151%" height="15" fill="rgb(222,74,54)"/><text x="66.8348%" y="478.50"></text></g><g><title>UVPoll_new (poll.pyx) (69 samples, 1.30%)</title><rect x="66.4525%" y="436" width="1.3041%" height="15" fill="rgb(216,99,12)"/><text x="66.7025%" y="446.50"></text></g><g><title>Loop__add_reader (uvloop/loop.pyx) (194 samples, 3.67%)</title><rect x="65.2051%" y="420" width="3.6666%" height="15" fill="rgb(226,22,26)"/><text x="65.4551%" y="430.50">Loop..</text></g><g><title>add_reader (uvloop/loop.pyx) (205 samples, 3.87%)</title><rect x="65.1106%" y="388" width="3.8745%" height="15" fill="rgb(217,163,10)"/><text x="65.3606%" y="398.50">add_..</text></g><g><title>add_reader (uvloop/loop.pyx) (201 samples, 3.80%)</title><rect x="65.1862%" y="404" width="3.7989%" height="15" fill="rgb(213,25,53)"/><text x="65.4362%" y="414.50">add_..</text></g><g><title>UVPoll_stop (poll.pyx) (55 samples, 1.04%)</title><rect x="71.0452%" y="452" width="1.0395%" height="15" fill="rgb(252,105,26)"/><text x="71.2952%" y="462.50"></text></g><g><title>UVPoll__poll_stop (poll.pyx) (54 samples, 1.02%)</title><rect x="71.0641%" y="468" width="1.0206%" height="15" fill="rgb(220,39,43)"/><text x="71.3141%" y="478.50"></text></g><g><title>UVPoll_stop_reading (poll.pyx) (64 samples, 1.21%)</title><rect x="70.9696%" y="436" width="1.2096%" height="15" fill="rgb(229,68,48)"/><text x="71.2196%" y="446.50"></text></g><g><title>remove_reader (uvloop/loop.pyx) (158 samples, 2.99%)</title><rect x="69.3442%" y="388" width="2.9862%" height="15" fill="rgb(252,8,32)"/><text x="69.5942%" y="398.50">rem..</text></g><g><title>remove_reader (uvloop/loop.pyx) (158 samples, 2.99%)</title><rect x="69.3442%" y="404" width="2.9862%" height="15" fill="rgb(223,20,43)"/><text x="69.5942%" y="414.50">rem..</text></g><g><title>Loop__remove_reader (uvloop/loop.pyx) (155 samples, 2.93%)</title><rect x="69.4009%" y="420" width="2.9295%" height="15" fill="rgb(229,81,49)"/><text x="69.6509%" y="430.50">Lo..</text></g><g><title>execute (psycopg3/cursor.py) (3,019 samples, 57.06%)</title><rect x="17.3502%" y="340" width="57.0592%" height="15" fill="rgb(236,28,36)"/><text x="17.6002%" y="350.50">execute (psycopg3/cursor.py)</text></g><g><title>wait (psycopg3/connection.py) (2,063 samples, 38.99%)</title><rect x="35.4186%" y="356" width="38.9907%" height="15" fill="rgb(249,185,26)"/><text x="35.6686%" y="366.50">wait (psycopg3/connection.py)</text></g><g><title>wait_async (psycopg3/waiting.py) (2,047 samples, 38.69%)</title><rect x="35.7210%" y="372" width="38.6883%" height="15" fill="rgb(249,174,33)"/><text x="35.9710%" y="382.50">wait_async (psycopg3/waiting.py)</text></g><g><title>wait (asyncio/locks.py) (110 samples, 2.08%)</title><rect x="72.3304%" y="388" width="2.0790%" height="15" fill="rgb(233,201,37)"/><text x="72.5804%" y="398.50">w..</text></g><g><title>PQgetlength (fe-exec.c) (146 samples, 2.76%)</title><rect x="85.3903%" y="404" width="2.7594%" height="15" fill="rgb(221,78,26)"/><text x="85.6403%" y="414.50">PQ..</text></g><g><title>PQgetvalue (fe-exec.c) (89 samples, 1.68%)</title><rect x="88.1497%" y="404" width="1.6821%" height="15" fill="rgb(250,127,30)"/><text x="88.3997%" y="414.50"></text></g><g><title>_psycopg3_load_bytea_binary (text.pyx) (60 samples, 1.13%)</title><rect x="90.5878%" y="404" width="1.1340%" height="15" fill="rgb(230,49,44)"/><text x="90.8378%" y="414.50"></text></g><g><title>_psycopg3_load_oid_binary (numeric.pyx) (131 samples, 2.48%)</title><rect x="92.0998%" y="404" width="2.4759%" height="15" fill="rgb(229,67,23)"/><text x="92.3498%" y="414.50">_p..</text></g><g><title>__Pyx_CyFunction_CallAsMethod (psycopg3/pq/pq_cython.pyx) (829 samples, 15.67%)</title><rect x="80.6842%" y="356" width="15.6681%" height="15" fill="rgb(249,83,47)"/><text x="80.9342%" y="366.50">__Pyx_CyFunction_CallAsM..</text></g><g><title>load_row (psycopg3/transform.pyx) (769 samples, 14.53%)</title><rect x="81.8182%" y="372" width="14.5341%" height="15" fill="rgb(215,43,3)"/><text x="82.0682%" y="382.50">load_row (psycopg3/tra..</text></g><g><title>load_row (psycopg3/transform.pyx) (757 samples, 14.31%)</title><rect x="82.0450%" y="388" width="14.3073%" height="15" fill="rgb(238,154,13)"/><text x="82.2950%" y="398.50">load_row (psycopg3/tra..</text></g><g><title>_psycopg3_load_text (text.pyx) (94 samples, 1.78%)</title><rect x="94.5757%" y="404" width="1.7766%" height="15" fill="rgb(219,56,2)"/><text x="94.8257%" y="414.50">_..</text></g><g><title>0x7fbdf12e5c99 (_asyncio.cpython-36m-x86_64-linux-gnu.so) (4,400 samples, 83.16%)</title><rect x="14.2506%" y="292" width="83.1601%" height="15" fill="rgb(233,0,4)"/><text x="14.5006%" y="302.50">0x7fbdf12e5c99 (_asyncio.cpython-36m-x86_64-linux-gnu.so)</text></g><g><title>worker (pgbench_python.py) (4,387 samples, 82.91%)</title><rect x="14.4963%" y="308" width="82.9144%" height="15" fill="rgb(235,30,7)"/><text x="14.7463%" y="318.50">worker (pgbench_python.py)</text></g><g><title>psycopg3_execute_async (pgbench_python.py) (4,354 samples, 82.29%)</title><rect x="15.1200%" y="324" width="82.2907%" height="15" fill="rgb(250,79,13)"/><text x="15.3700%" y="334.50">psycopg3_execute_async (pgbench_python.py)</text></g><g><title>fetchall (psycopg3/cursor.py) (1,217 samples, 23.00%)</title><rect x="74.4094%" y="340" width="23.0013%" height="15" fill="rgb(211,146,34)"/><text x="74.6594%" y="350.50">fetchall (psycopg3/cursor.py)</text></g><g><title>Handle__run (uvloop/cbhandles.pyx) (4,498 samples, 85.01%)</title><rect x="13.9671%" y="276" width="85.0123%" height="15" fill="rgb(228,22,38)"/><text x="14.2171%" y="286.50">Handle__run (uvloop/cbhandles.pyx)</text></g><g><title>Handle__run (uvloop/cbhandles.pyx) (4,532 samples, 85.65%)</title><rect x="13.7781%" y="244" width="85.6549%" height="15" fill="rgb(235,168,5)"/><text x="14.0281%" y="254.50">Handle__run (uvloop/cbhandles.pyx)</text></g><g><title>Loop__on_idle (uvloop/loop.pyx) (4,530 samples, 85.62%)</title><rect x="13.8159%" y="260" width="85.6171%" height="15" fill="rgb(221,155,16)"/><text x="14.0659%" y="270.50">Loop__on_idle (uvloop/loop.pyx)</text></g><g><title>uv__run_idle (loop-watcher.c) (4,554 samples, 86.07%)</title><rect x="13.6458%" y="212" width="86.0707%" height="15" fill="rgb(215,215,53)"/><text x="13.8958%" y="222.50">uv__run_idle (loop-watcher.c)</text></g><g><title>loop_cb_idle_callback (idle.pyx) (4,554 samples, 86.07%)</title><rect x="13.6458%" y="228" width="86.0707%" height="15" fill="rgb(223,4,10)"/><text x="13.8958%" y="238.50">loop_cb_idle_callback (idle.pyx)</text></g><g><title>&lt;module&gt; (pgbench_python.py) (5,282 samples, 99.83%)</title><rect x="0.0000%" y="52" width="99.8299%" height="15" fill="rgb(234,103,6)"/><text x="0.2500%" y="62.50">&lt;module&gt; (pgbench_python.py)</text></g><g><title>run_until_complete (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="68" width="92.0998%" height="15" fill="rgb(227,97,0)"/><text x="7.9801%" y="78.50">run_until_complete (uvloop/loop.pyx)</text></g><g><title>run_until_complete (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="84" width="92.0998%" height="15" fill="rgb(234,150,53)"/><text x="7.9801%" y="94.50">run_until_complete (uvloop/loop.pyx)</text></g><g><title>__Pyx_PyObject_CallNoArg (cfunc.to_py) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="100" width="92.0998%" height="15" fill="rgb(228,201,54)"/><text x="7.9801%" y="110.50">__Pyx_PyObject_CallNoArg (cfunc.to_py)</text></g><g><title>__Pyx_PyObject_CallMethO (cfunc.to_py) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="116" width="92.0998%" height="15" fill="rgb(222,22,37)"/><text x="7.9801%" y="126.50">__Pyx_PyObject_CallMethO (cfunc.to_py)</text></g><g><title>run_forever (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="132" width="92.0998%" height="15" fill="rgb(237,53,32)"/><text x="7.9801%" y="142.50">run_forever (uvloop/loop.pyx)</text></g><g><title>run_forever (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="148" width="92.0998%" height="15" fill="rgb(233,25,53)"/><text x="7.9801%" y="158.50">run_forever (uvloop/loop.pyx)</text></g><g><title>Loop__run (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="164" width="92.0998%" height="15" fill="rgb(210,40,34)"/><text x="7.9801%" y="174.50">Loop__run (uvloop/loop.pyx)</text></g><g><title>Loop___run (uvloop/loop.pyx) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="180" width="92.0998%" height="15" fill="rgb(241,220,44)"/><text x="7.9801%" y="190.50">Loop___run (uvloop/loop.pyx)</text></g><g><title>uv_run (core.c) (4,873 samples, 92.10%)</title><rect x="7.7301%" y="196" width="92.0998%" height="15" fill="rgb(235,28,35)"/><text x="7.9801%" y="206.50">uv_run (core.c)</text></g><g><title>all (5,291 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(210,56,17)"/><text x="0.2500%" y="46.50"></text></g></svg></svg>