<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog</title>
  <id>urn:uuid:345e7579-5b16-39e4-9f1d-2a4bff93035d</id>
  <updated>2020-02-23T00:00:00Z</updated>
  <link href="https://www.varrazzo.com/blog/" />
  <link href="https://www.varrazzo.com/blog.xml" rel="self" />
  <author>
    <name></name>
  </author>
  <generator uri="https://github.com/t73fde/lektor-feed" version="20191006.1">Lektor Feed Plugin</generator>
  <entry xml:base="https://www.varrazzo.com/blog/2020/02/23/a-website/">
    <title type="text">A Website!</title>
    <id>urn:uuid:9ef98bd1-11e2-3b83-8c1c-2867fef80f27</id>
    <updated>2020-02-23T00:00:00Z</updated>
    <link href="https://www.varrazzo.com/blog/2020/02/23/a-website/" />
    <author>
      <name>Daniele Varrazzo</name>
    </author>
    <content type="html">&lt;p&gt;There's something broken on the internet. This blog will fix it all!&lt;/p&gt;
&lt;p&gt;Nevermind being late to the party some good 20 years...&lt;/p&gt;
&lt;p&gt;However I find myself with a &lt;a class=&quot;reference external&quot; href=&quot;/software/&quot;&gt;body of works&lt;/a&gt; I would like to present, news I
would like to give, &lt;a class=&quot;reference external&quot; href=&quot;/photos/&quot;&gt;photos&lt;/a&gt; I would like to show and talk about... I was
starting to need a place of my own.&lt;/p&gt;
&lt;p&gt;So, late, very late, well after Google murdered RSS syndication, and the
orange icon is a thing of the past, here is a blog!&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;how-was-it-made&quot;&gt;
&lt;h3&gt;How was it made&lt;/h3&gt;
&lt;p&gt;Unless you need concurrent content editing by several users with different
permissions and with no technical competence, a database-backed website is not
really needed. And if a website is just a bunch of static pages, nice things
will happen:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;you can version it in Git or in your favourite SCM of the past,&lt;/li&gt;
&lt;li&gt;it's very simple to serve: just a bunch of files on a webserver,&lt;/li&gt;
&lt;li&gt;it will never be pwned,&lt;/li&gt;
&lt;li&gt;you can easily find someone to serve it for you: &lt;a class=&quot;reference external&quot; href=&quot;https://pages.github.com/&quot;&gt;GitHub pages&lt;/a&gt; for
instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course I don't want to write HTML by hand, so off I went looking for a
static website generator. As we mentioned GitHub pages, &lt;a class=&quot;reference external&quot; href=&quot;https://jekyllrb.com/docs/github-pages/&quot;&gt;Jekyll&lt;/a&gt; did come to
mind, but it has a couple of shortcomings:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;it's written in Ruby, which is not my expertise so, in case I needed a quick
hack, there would be a lot of overhead;&lt;/li&gt;
&lt;li&gt;it uses &lt;a class=&quot;reference external&quot; href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; as markup languages, which is &lt;a class=&quot;reference external&quot; href=&quot;http://www.zverovich.net/2016/06/16/rst-vs-markdown.html&quot;&gt;immensely inferior&lt;/a&gt; to
&lt;a class=&quot;reference external&quot; href=&quot;https://en.wikipedia.org/wiki/ReStructuredText&quot;&gt;reStructuredText&lt;/a&gt; in design and tooling.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shopping around, I found &lt;a class=&quot;reference external&quot; href=&quot;https://www.getlektor.com/&quot;&gt;Lektor&lt;/a&gt;, which seems actually a nifty thing. It uses
Markdown out-of the box as well, but it is easy to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/fschulze/lektor-rst&quot;&gt;add reST using a
plugin&lt;/a&gt;. For an example, &lt;a class=&quot;reference external&quot; href=&quot;https://raw.githubusercontent.com/dvarrazzo/www.varrazzo.com/master/content/blog/a-website/contents.lr&quot;&gt;this is this article source&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I tried this setup with the &lt;a class=&quot;reference external&quot; href=&quot;https://www.psycopg.org/&quot;&gt;psycopg website&lt;/a&gt;, which I migrated from being a
Django website to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/psycopg/psycopg-website/&quot;&gt;static content&lt;/a&gt;, and it was quite a simple task.&lt;/p&gt;
&lt;p&gt;Then I went around shopping for a nice template: I found a cool one called
&lt;a class=&quot;reference external&quot; href=&quot;achtungthemes.com/borano/&quot;&gt;Borano&lt;/a&gt; (look at this &lt;a class=&quot;reference external&quot; href=&quot;http://achtungthemes.com/borano/index-portfolio.html&quot;&gt;portfolio&lt;/a&gt;, it is a joy...). Lektor supports &lt;a class=&quot;reference external&quot; href=&quot;https://palletsprojects.com/p/jinja/&quot;&gt;Jinja&lt;/a&gt;
templates to spit HTML, so I am now in the process, as I create some content
and work out what is that I have to say, to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/dvarrazzo/www.varrazzo.com/blob/e02696529e58b1b72bb9067c91e1c783895b8912/templates/page.html&quot;&gt;convert&lt;/a&gt; the template to Jinja.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;the-workflow&quot;&gt;
&lt;h3&gt;The workflow&lt;/h3&gt;
&lt;p&gt;All it takes to work on the website is:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;use my favourite editor (no pesky HTML textarea) to create and edit pages;&lt;/li&gt;
&lt;li&gt;running &lt;tt class=&quot;docutils literal&quot;&gt;make serve&lt;/tt&gt; the website preview is immediately available on
&lt;tt class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;http://localhost:5000/&lt;/span&gt;&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;commit and push to &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/dvarrazzo/www.varrazzo.com/&quot;&gt;the website repos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is where the work to add or change content finishes. What will happen
behind the scene will be:&lt;/p&gt;
&lt;ul class=&quot;simple&quot;&gt;
&lt;li&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://travis-ci.org/dvarrazzo/www.varrazzo.com&quot;&gt;Travis will render the pages&lt;/a&gt; and push the result &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/dvarrazzo/dvarrazzo.github.io&quot;&gt;on another repos&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;from there the website is immediately published on &lt;a class=&quot;reference external&quot; href=&quot;https://www.varrazzo.com/&quot;&gt;https://www.varrazzo.com/&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it.&lt;/p&gt;
&lt;p&gt;I don't think the system can work for everyone. I could probably set up the
system to some non tech friend and explain what to do, but they should at
least be able to use git for their regular workflow. It might be actually not
such a high bar: if someone would like to try and start publishing a small
website please let me know!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;bonus-comments&quot;&gt;
&lt;h3&gt;Bonus: comments&lt;/h3&gt;
&lt;p&gt;A blog is not a blog if it doesn't have comments. But open comments take spam
with them, which in my experience got very boring to administer.&lt;/p&gt;
&lt;p&gt;I was thinking to use GitHub issues to store my comments, in order to leverage
their anti-spam system, whilst still being able to take them out in case I'd
like to migrate to something else. But apparently it's difficult to have a new
idea on Internet, and I found a few implementations already written.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://utteranc.es/&quot;&gt;utteranc.es&lt;/a&gt; seems a very good one and quick to set up, so here it is... ðŸ‘‡&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
